function table.override(table1, table2)
    if table2 == nil then
        return
    end

    -- 遍历 table2
    for key, value in pairs(table2) do
        if type(value) == "table" and type(table1[key]) == "table" then
            -- 递归合并子表
            table.override(table1[key], value)
        else
            -- 不同字段，则合并；相同字段，覆盖
            table1[key] = value
        end
    end

    return table1
end

function table.reverse(t)
    local n = #t
    local i = 1
    while i < n do
      t[i], t[n] = t[n], t[i]
      i = i + 1
      n = n - 1
    end
    return t
  end

  function table.ContainsValue(t, value)
    for _, v in ipairs(t) do
        if v == value then
            return true
        end
    end
    return false
end


function table.indexof(t, value)
    for i, v in ipairs(t) do
        if v == value then
            return i
        end
    end
    return nil
end

function table.remove_duplicates(array)
    local hash = {}
    local res = {}

    for _,v in ipairs(array) do
        if (not hash[v]) then
            table.insert(res, v)
            hash[v] = true
        end
    end
    return res
end